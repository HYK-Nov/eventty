<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eventty.applyservice.domain.ApplyReposiroty">
    <!--  현재 신청 인원수 체크  -->
    <select id="getApplyNum" parameterType="Long" resultType="Long">
        <!-- Current Apply Num -->
        SELECT SUM(applicant_num)
          FROM apply
         WHERE 1=1
           AND event_id = #{eventId}
           AND delete_date IS NULL;
    </select>

    <!--  행사 신청  -->
    <insert id="insertApply" parameterType="com.eventty.applyservice.application.dto.CreateApplyDTO">
        INSERT INTO
            apply(user_id, event_id, ticket_id, applicant_num, phone)
        VALUES(#{userId}, #{eventId}, #{ticketId}, #{applicantNum}, #{phone})
    </insert>

    <update id="deleteApply" parameterType="Long">
        UPDATE apply
           SET DELETE_DATE = NOW()
         WHERE id = #{applyId}
    </update>

    <select id="deleteCheck" parameterType="Long" resultType="Boolean">
        SELECT
            CASE
                WHEN delete_date IS NULL THEN TRUE
                ELSE FALSE
            END AS result
          FROM apply
         WHERE id = #{applyId}
    </select>

    <select id="findByUserId" parameterType="Long" resultType="com.eventty.applyservice.application.dto.FindByUserIdDTO">
        SELECT
            id              AS applyId,
            event_id        AS eventId,
            ticket_id       AS ticketId,
            applicant_num   AS applicantNum,
            phone,
            apply_date      AS applyDate,
            delete_date     AS deleteDate,
            CASE
                WHEN apply_date > delete_date THEN apply_date
                ELSE delete_date
            END             AS recentDate
          FROM apply
         WHERE user_id = #{userId}
         ORDER BY recentDate DESC
    </select>

    <select id="findByEventIdGroupByTicket" parameterType="Long" resultType="com.eventty.applyservice.application.dto.response.FindUsingTicketResponseDTO">
        SELECT
            ticket_id AS ticketId,
            SUM(applicant_num) as usingCount
          FROM apply
         WHERE 1=1
           AND event_id = #{eventId}
           AND delete_date IS NULL
         GROUP BY ticket_id
    </select>
</mapper>